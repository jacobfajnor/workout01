points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
library(dyplr)
install.packages(dyplr)
library(readr)
library(ggplot2)
library(dplyr)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
library(readr)
library(ggplot2)
library(dplyr)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
nba2018players.csv <- paste0(github, repo)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
summary(dat)
class(dat)
as.data.frame(team_salaries)
as.data.frame(team_salaries)
team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
as.data.frame(team_salaries)
team_salaries <- arrange(team_salaires, desc(total_salary))
team_salaries <- as.data.frame(team_salaries)
team_salaries
team_salaries <- arrange(team_salaires, desc(total_salary))
team_salaries <- arrange(team_salaries, desc(total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_bar()
team_salaries <- arrange(team_salaries, desc(total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_bar()
team_salaries <- arrange(team_salaries, desc(total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col()
View(dat)
library(readr)
library(ggplot2)
library(dplyr)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
nba2018players.csv <- paste0(github, repo)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
summary(dat)
class(dat)
team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
team_salaries
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline( y = mean(total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(dat, y = mean(total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(dat, aes(y = mean(total_salary)))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(dat, aes(x = NULL, y = mean(total_salary)))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(team_salaries, aes(x = NULL, y = mean(total_salary)))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(team_salaries, y = mean(total_salary)
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(team_salaries, y = mean(total_salary))
mean(total_salary)
mean(team_salaries$total_salary)
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_abline(team_salaries, y = mean(team_salaries$total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_line(team_salaries, y = mean(team_salaries$total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_line(team_salaries, aes(y = mean(total_salary)))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_line(y = mean(total_salary))
ggplot(team_salaries, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + geom_line(y = mean(team_salaries$total_salary))
mutate(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000))
View(dat)
View(dat)
mutate(summarize(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)))
View(dat)
team_salaries2 <- mutate(summarize(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)))
team_salaries2 <- arrange(mutate(summarize(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000))), desc(total_salary))
View(team_salaries2)
View(team_salaries2)
ggplot(team_salaries2, aes(x = team, y = total_salary)) + coord_flip() + geom_col()
ggplot(team_salaries2, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + desc(total_salary)
ggplot(team_salaries2, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + desc(team_salaries2$total_salary)
ggplot(team_salaries2, aes(x = reorder(team, -total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = identity)
ggplot(team_salaries2, aes(x = reorder(team, -total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
ggplot(team_salaries2, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + geom_line(team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
p + geom_line(team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
p + geom_line(data = team_salaries, aes( x = NULL, y = mean(total_salary)), color = 'red')
avg_team_salary <- sum(team_salaries$total_salary/length(team))
avg_team_salary <- sum(team_salaries$total_salary/length(team_salaries$team))
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
avg_team_salary <- sum(team_salaries$total_salary/length(team_salaries$team))
p + geom_line(data = team_salaries, aes( x = team, y = avg_team_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
avg_team_salary <- sum(team_salaries$total_salary/length(team_salaries$team))
p + geom_line(data = team_salaries, aes( x = team, y = avg_team_salary), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team")
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + opts(title = "NBA Teams ranked by total salary")
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams ranked by total salary")
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary")
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_bw()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_minimal()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_void()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)))
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 6)
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 6)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 6)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 4)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 3)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
library(readr)
library(ggplot2)
library(dplyr)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
nba2018players.csv <- paste0(github, repo)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
summary(dat)
class(dat)
team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
team_salaries
team_salaries <- as.data.frame(team_salaries)
team_salaries
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
team_points
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
points_salary <- inner_join(team_points, team_salaries)
View(points_salary)
View(points_salary)
mutate(points_salary, cost_points = (total_salary*1000000)/total_points))
mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(cost_points)
summary(points_salary$cost_points)
summary(cost_points)
cost_point <- points_salary$cost_points
summary(cost_points)
cost_point <- points_salary$cost_points
summary(cost_point)
View(points_salary)
View(points_salary)
View(team_points)
View(team_points)
View(team_salaries)
View(team_salaries)
View(points_salary)
View(points_salary)
points_salary <- mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(cost_point)
summary(cost_points)
View(points_salary)
summary(points_salary$cost_points)
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(color = team, alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(aes(color = team), alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(aes(color = team, y = y), alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(aes(color = team, y = cost_point), alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_col() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point))
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = median(cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = median(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity") + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", color = team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = Team, ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", color = points_salary$team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = Team, ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", color = points_salary$team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col()) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(color = points_salary$team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(color = 'points_salary$team') + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_dotplot(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_density(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_area(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_col(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points) y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm'), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'loess') + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm', formula = y~x, se = FALSE) + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.") + xlim(0, 100)
library(readr)
library(ggplot2)
library(dplyr)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
nba2018players.csv <- paste0(github, repo)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
summary(dat)
class(dat)
team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
team_salaries
team_salaries <- as.data.frame(team_salaries)
team_salaries
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
points_salary <- inner_join(team_points, team_salaries)
summary(points_salary)
points_salary <- mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(points_salary$cost_points)
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm', formula = y~x, se = FALSE) + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
# current directory
pwd
gwd()
write.csv(
x = mtcars,
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv')
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = /c/Users/Fajnor/stat133-lab05/exports/dataset.csv
)
write.csv(
+     x = (mtcars[c('mpg', 'disp', 'hp')]),
+     file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv'
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
'file = /c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
write.csv(
+     x = (mtcars[c('mpg', 'disp', 'hp')]),
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
data(mtcars)
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
data(mtcars)
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = 'C:/Users/Fajnor/stat133-lab05/exports/dataset.csv')
mtcars.str <- str(mtcars)
write.csv(
x = mtcars.str,
file = 'C:/Users/Fajnor/stat133-lab05/exports/mtcars-structure.txt')
summary_mtcars <- summary(mtcars)
write.csv(
x = summary_mtcars,
file = 'C:/Users/Fajnor/stat133-lab05/exports/summary-mtcars.txt')
plot1 <- plot(mtcars, x=mtcars$mpg, y=mtcars$wt)
plot1 <- plot(x=mtcars$mpg, y=mtcars$wt)
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
png(plot(x=mtcars$mpg, y=mtcars$wt), filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot1
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480, res = 100)
plot(x=mtcars$hp, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-hp-wt.png", width = 480, height = 480, res = 100)
plot(x=mtcars$hp, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
jpeg(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-histogram-mpg.jpeg", width = 480, height = 480)
hist(x=mtcars$mpg)
dev.off()
jpeg(filename = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.jpeg", width = 480, height = 480)
hist(x=mtcars$mpg)
dev.off()
pdf(filename = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
pdf(file = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
hist(x=mtcars$mpg)
dev.off()
library(ggplot2)
ggplot(mtcars, aes(x = mgp, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggsave(filename = 'C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-disp.pdf', last_plot())
Igoudala <- read.csv("./data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("~/Desktop/workout01/data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv(file = "../data/andre-iguodala.csv", stringsAsFactors = FALSE)
source('C:/Users/Fajnor/Desktop/workout01/code/workout01-Jacob-Fajnor.R')
setwd("~/Desktop/workout01")
setwd("C:/Users/Fajnor/Desktop/workout01")
curry <- read.csv("./data/stephen-curry")
curry <- read.csv("../data/stephen-curry")
curry <- read.csv("C:\Users\Fajnor\Desktop\workout01\data\stephen-curry")
setwd("C:/Users/Fajnor/Desktop/workout01")
curry <- read.csv("./data/stephen-curry")
curry <- read.csv("./data/stephen-curry.csv")
View(curry)
igoudala <- read.csv("./data/andre-iguodala.csv")
curry <- read.csv("./data/stephen-curry.csv", stringsAsFactors = FALSE)
igoudala <- read.csv("./data/andre-iguodala.csv", stringsAsFactors = FALSE)
green <- read.csv("./data/draymond-green.csv", stingsAsFactors = FALSE)
green <- read.csv("./data/draymond-green.csv", stringsAsFactors = FALSE)
durant <- read.csv("./data/kevin-durant.csv", stringsAsFactors = FALSE)
thompson <- read.csv("./data/clay-thompson.csv", stringsAsFactors = FALSE)
thompson <- read.csv("./data/klay-thompson.csv", stringsAsFactors = FALSE)
View(curry)
igoudala$name <- "Andre Igoudala"
curry$name <- "Stephen Curry"
green$name <- "Draymond Green"
durant$name <- "Kevin Durant"
thompson$name <- "Klay Thompson"
View(curry)
igoudala$shot_made_flag <- ifelse(igoudala$shot_made_flag == "n", "shot_no", "shot_yes")
View(igoudala)
igoudala$shot_made_flag <- ifelse(igoudala$shot_made_flag == "n", "shot_no", "shot_yes")
curry$shot_made_flag <- ifelse(curry$shot_made_flag == "n", "shot_no", "shot_yes")
thompson$shot_made_flag <- ifelse(thompson$shot_made_flag == "n", "shot_no", "shot_yes")
durant$shot_made_flag <- ifelse(durant$shot_made_flag == "n", "shot_no", "shot_yes")
green$shot_made_flag <- ifelse(green$shot_made_flag == "n", "shot_no", "shot_yes")
curry$minute <- 12*curry$period - curry$minutes_remaining
View(curry)
curry$minute <- 12*curry$period - curry$minutes_remaining
igoudala$minute <- 12*igoudala$period - igoudala$minutes_remaining
thompson$minute <- 12*thompson$period - thompson$minutes_remaining
green$minute <- 12*green$period - green$minutes_remaining
durant$minute <- 12*durant$period - durant$minutes_remaining
sink(file = ./output.andre-igoudala-summary.txt,
summary(igoudala))
sink(file = "./output.andre-igoudala-summary.txt",
summary(igoudala))
summary(igoudala)
sink(file = "./output.andre-igoudala-summary.txt")
summary(igoudala)
sink()
sink(file = "./output/andre-igoudala-summary.txt")
summary(igoudala)
sink()
# Durant
sink(file = "./output/kevin-durant-summary.txt")
summary(durant)
sink()
# Igoudala
sink(file = "./output/andre-igoudala-summary.txt")
summary(igoudala)
sink()
# Curry
sink(file = "./output/stephen-curry-summary.txt")
summary(curry)
sink()
# Thompson
sink(file = "./output/klay-thompson-summary.txt")
summary(thompson)
sink()
# Green
sink(file = "./output/draymond-green-summary.txt")
summary(green)
sink()
players <- ribnd(curry, durant, igoudala, thompson, green)
players <- rbind(curry, durant, igoudala, thompson, green)
View(igoudala)
View(players)
View(players)
write.csv(players, "./data/shots-data.csv")
sink(file = "./ouput/shots-data-summary.csv")
summary(players)
sink()
sink(file = "./output/shots-data-summary.csv")
summary(players)
sink()
sink(file = "./output/shots-data-summary.txt")
summary(players)
sink()
