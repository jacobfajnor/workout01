View(team_salaries2)
View(team_salaries2)
ggplot(team_salaries2, aes(x = team, y = total_salary)) + coord_flip() + geom_col()
ggplot(team_salaries2, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + desc(total_salary)
ggplot(team_salaries2, aes(x = team, y = total_salary)) + coord_flip() + geom_col() + desc(team_salaries2$total_salary)
ggplot(team_salaries2, aes(x = reorder(team, -total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = identity)
ggplot(team_salaries2, aes(x = reorder(team, -total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
ggplot(team_salaries2, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + geom_line(team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
p + geom_line(team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
p + geom_line(data = team_salaries, aes( x = NULL, y = mean(total_salary)), color = 'red')
avg_team_salary <- sum(team_salaries$total_salary/length(team))
avg_team_salary <- sum(team_salaries$total_salary/length(team_salaries$team))
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
avg_team_salary <- sum(team_salaries$total_salary/length(team_salaries$team))
p + geom_line(data = team_salaries, aes( x = team, y = avg_team_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity')
avg_team_salary <- sum(team_salaries$total_salary/length(team_salaries$team))
p + geom_line(data = team_salaries, aes( x = team, y = avg_team_salary), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team")
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + opts(title = "NBA Teams ranked by total salary")
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams ranked by total salary")
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary")
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_bw()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_minimal()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_void()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic()
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)))
p + geom_line(data = team_salaries, aes( x = team, y = mean(total_salary)), color = 'red')
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 6)
p <- ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 6)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 6)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 4)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 3)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
library(readr)
library(ggplot2)
library(dplyr)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
nba2018players.csv <- paste0(github, repo)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
summary(dat)
class(dat)
team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
team_salaries
team_salaries <- as.data.frame(team_salaries)
team_salaries
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity') + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
team_points
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
points_salary <- inner_join(team_points, team_salaries)
View(points_salary)
View(points_salary)
mutate(points_salary, cost_points = (total_salary*1000000)/total_points))
mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(cost_points)
summary(points_salary$cost_points)
summary(cost_points)
cost_point <- points_salary$cost_points
summary(cost_points)
cost_point <- points_salary$cost_points
summary(cost_point)
View(points_salary)
View(points_salary)
View(team_points)
View(team_points)
View(team_salaries)
View(team_salaries)
View(points_salary)
View(points_salary)
points_salary <- mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(cost_point)
summary(cost_points)
View(points_salary)
summary(points_salary$cost_points)
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(color = team, alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(aes(color = team), alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(aes(color = team, y = y), alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point(aes(color = team, y = cost_point), alpha = .7) + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_point() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point)) + geom_col() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_point))
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = median(cost_point), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = median(cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = median(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity") + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", color = team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = Team, ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", color = points_salary$team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = Team, ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", color = points_salary$team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2, linetype = "dotdash") + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(stat = "identity", aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_bar(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col()) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", xlab = "Team", ylab = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col() + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(color = points_salary$team) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(color = 'points_salary$team') + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_col(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_dotplot(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_density(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_area(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "bluea line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = team, y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_col(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points) y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm'), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'loess') + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm') + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm', formula = y~x, se = FALSE) + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.") + xlim(0, 100)
library(readr)
library(ggplot2)
library(dplyr)
github <- 'https://github.com/ucb-stat133/stat133-hws/'
repo <- 'raw/master/data/nba2018-players.csv'
nba2018players.csv <- paste0(github, repo)
dat <- read_csv(nba2018players.csv, col_names = TRUE, col_types = cols(player = col_character(),
team = col_character(),
position = col_factor(),
height = col_integer(),
weight = col_integer(),
age = col_integer(),
experience = col_integer(),
college = col_character(),
salary = col_double(),
games = col_integer(),
minutes = col_integer(),
points = col_integer(),
points3 = col_integer(),
points2 = col_integer(),
points1 = col_integer()))
summary(dat)
class(dat)
team_salaries <- arrange(summarise(group_by(dat, team),
total_salary = sum(salary/1000000),
average_salary = mean(salary/1000000),
median_salary = median(salary/1000000)
), desc(total_salary))
team_salaries <- as_tibble(team_salaries)
team_salaries
team_salaries <- as.data.frame(team_salaries)
team_salaries
ggplot(team_salaries, aes(x = reorder(team, total_salary), y = total_salary)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Salary (in millions)") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Salary", caption = "Red line represents NBA average total salary per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_salary)), color = "red", size = 2)
team_points <- arrange(summarize(group_by(dat, team),
total_points = sum(points),
mean_points = mean(points),
median_points = median(points)), desc(total_points))
as.data.frame(team_points)
ggplot(team_points, aes(x = reorder(team, total_points), y = total_points)) + coord_flip() + geom_bar(stat = 'identity', color = "light grey") + ylab("Total Team Points") + xlab("Team") + labs(title = "NBA Teams Ranked by Total Points", caption = "Red line represents NBA average total points per team") + theme_classic() + geom_hline(aes(yintercept = mean(total_points)), color = "red", size = 2)
points_salary <- inner_join(team_points, team_salaries)
summary(points_salary)
points_salary <- mutate(points_salary, cost_points = (total_salary*1000000)/total_points)
summary(points_salary$cost_points)
ggplot(points_salary, aes(reorder(x = team, cost_points), y = cost_points)) + geom_point(aes(color = points_salary$team)) + geom_hline( yintercept = mean(points_salary$cost_points), color = "blue", size = 2) + labs(title = "Cost per Point for NBA teams", x = "Team", y = "cost of each point scored in 2018 (in dollars)", caption = "blue line represents the average, or typical, dollars paid per point.")
ggplot(points_salary, aes(x = total_points, y = total_salary*1000000)) + geom_point(aes(color = points_salary$team)) + geom_smooth(method = 'lm', formula = y~x, se = FALSE) + labs(title = "Cost per Point for NBA teams", x = "Total Points", y = "Total Salary", caption = "blue line represents the expected cost per point based upon the data set.")
# current directory
pwd
gwd()
write.csv(
x = mtcars,
)
write.csv(
x = mtcars,
file = 'stat133-lab05/exports.csv')
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = /c/Users/Fajnor/stat133-lab05/exports/dataset.csv
)
write.csv(
+     x = (mtcars[c('mpg', 'disp', 'hp')]),
+     file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv'
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
'file = /c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
write.csv(
+     x = (mtcars[c('mpg', 'disp', 'hp')]),
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
data(mtcars)
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = '/c/Users/Fajnor/stat133-lab05/exports/dataset.csv')
data(mtcars)
write.csv(
x = (mtcars[c('mpg', 'disp', 'hp')]),
file = 'C:/Users/Fajnor/stat133-lab05/exports/dataset.csv')
mtcars.str <- str(mtcars)
write.csv(
x = mtcars.str,
file = 'C:/Users/Fajnor/stat133-lab05/exports/mtcars-structure.txt')
summary_mtcars <- summary(mtcars)
write.csv(
x = summary_mtcars,
file = 'C:/Users/Fajnor/stat133-lab05/exports/summary-mtcars.txt')
plot1 <- plot(mtcars, x=mtcars$mpg, y=mtcars$wt)
plot1 <- plot(x=mtcars$mpg, y=mtcars$wt)
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
png(plot(x=mtcars$mpg, y=mtcars$wt), filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot1
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480, res = 100)
plot(x=mtcars$hp, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-hp-wt.png", width = 480, height = 480, res = 100)
plot(x=mtcars$hp, y=mtcars$wt)
dev.off()
png(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-wt.png", width = 480, height = 480)
plot(x=mtcars$mpg, y=mtcars$wt)
dev.off()
jpeg(filename = "C:/Users/Fajnor/stat133-lab05/exports/scatterplot-histogram-mpg.jpeg", width = 480, height = 480)
hist(x=mtcars$mpg)
dev.off()
jpeg(filename = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.jpeg", width = 480, height = 480)
hist(x=mtcars$mpg)
dev.off()
pdf(filename = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
pdf(file = "C:/Users/Fajnor/stat133-lab05/exports/histogram-mpg.pdf", width = 7, height = 5)
hist(x=mtcars$mpg)
dev.off()
library(ggplot2)
ggplot(mtcars, aes(x = mgp, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp))
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggplot(mtcars, aes(x = mpg, y = disp)) + geom_point()
ggsave(filename = 'C:/Users/Fajnor/stat133-lab05/exports/scatterplot-mpg-disp.pdf', last_plot())
Igoudala <- read.csv("./data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv("~/Desktop/workout01/data/andre-iguodala.csv", stringsAsFactors = FALSE)
Igoudala <- read.csv(file = "../data/andre-iguodala.csv", stringsAsFactors = FALSE)
source('C:/Users/Fajnor/Desktop/workout01/code/workout01-Jacob-Fajnor.R')
x <- 1:50
x <- 1:50
x[seq(1, 5)]
x <- 1:50
x[seq(1, 5, 5)]
x <- 1:50
x[seq(from = 1, to = 50, by = 5)]
help(load)
1 == TRUE
0 == FALSE
x<- 4
x > 5
x<- 4
x > 5
y <- c(1, 4, 9, 16, 25)
z <- sqrt(y)
y <- c(1, 4, 9, 16, 25)
z <- sqrt(y)
x <- 1:50
x[seq(from = 1, to = 50, by = 5)]
x[seq(from = tail(x), to = (tail(x)-5), by -1)]
tail(x)
x[(tail(x) - 5):tail(x)]
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data"
abalone <- read.table(url, sep = ",")
origin <- 'http://archive.ics.uci.edu/ml/machine-learning-databases/abalone/abalone.data'
destination <- 'abalone.data'
download.file(origin, destination)
abalone <- read.table("abalone.data", sep = ",")
head(abalone)
tail(abalone)
str(abalone, vec.len = 1)
col.names <- c("sex", "length", "diameter", "height", "whole", "shucked", "Viscera", "shell", "rings")
column_types <- c("character", "real", "real", "real", "real", "real", "real", "real", "integer")
abalone <- read.table("abalone.data", sep = ",", colClasses = column_types, col.names = col.names)
str(abalone)
abalone2 <- read.csv(url, header = FALSE)
abalone10 <- read.csv(url, header = FALSE, col.names = col.names, colClasses = column_types, nrows = 10)
str(abalone10)
abalone20 <- read.csv(url, header = FALSE, col.names = col.names, colClasses = column_types, nrows = 10, skip = 10)
str(abalone20)
col_types.NULL <- c("character", "NULL", "real", "real", "real", "real", "real", "real", "integer")
abalone10.NULL <- read.csv(url, header = FALSE, col.names = col.names, colClasses = col_types.NULL, nrows = 10)
str(abalone10.NULL)
# When we place Null as a column class we get loose that entire column of data (as seen above the NULL column was in place of "length").
str(abalone)
summary(abalone)
head(abalone)
tail(abalone)
dim(abalone)
names(abalone)
colnames(abalone)
nrow(abalone)
ncol(abalone)
summary(abalone)
apply(abalone, 2, sd)
three_rows <- abalone[1:3, ]
three_rows
gt <- abalone[abalone$length > .6, ]
gt
length_diam <- abalone[ , c('length', 'diameter')]
head(length_diam)
first_5 <- abalone[1:5, ]
first_5
by_5 <- abalone[seq(5, 50, by = 5), ]
by_5
last_5 <- abalone[seq(4177, 4172, by = (-1)), ]
last_5
height14 <- abalone[abalone$height < .14, ]
as.data.frame(height14)
dim(height14)
infant <- abalone[abalone$sex == 'I', ]
as.data.frame(infant)
dim(infant)
male_female <- abalone[!abalone$sex == 'I', ]
as.data.frame(male_female)
dim(male_female)
rings_25 <- as.data.frame(abalone[abalone$rings > 25, c(1, 9)])
rings_25
as.data.frame(infant[infant$rings > 3 | infant$rings < 6, c(1, 9, 3)])
abies <- abalone[abalone$sex == "I", c('length', 'height', 'diameter')]
abies$Ht_len <- abies$height/abies$length
abies2 <- abies[order(abies$length, decreasing = T), ]
abies$whole <- abalone[abalone$sex == 'I', 'whole']
abies$shucked <- abalone[abalone$sex == 'I', 'shucked']
abies$product <- abies$whole * abies$shucked
abies3 <- abies
abies3$log_height <- log(abies3$height)
abies3$log_length <- log(abies3$length)
abalone_height12 <- abalone[abalone$height < .12, ]
abalone_height12[order(abalone_height12$height, decreasing = F), ]
plot(abalone$height)
abalone$SexF <- factor(abalone$sex)
plot(abalone$SexF)
plot(abalone$height, abalone$length)
abalone.plot <- abalone[ ,c(4, 2)]
plot(abalone.plot)
abalone.plot2 <- abalone[ ,c(4, 2, 3)]
plot(abalone.plot2)
abalone.plot3 <- abalone[ ,c(2, 10)]
plot(abalone.plot3)
abalone.plot4 <- abalone[ ,c(10, 2)]
plot(abalone.plot4)
plot(abalone$length, abalone$height, col = "green", xlab = 'height', ylab = 'length', main = "Height vs. Length")
load(dyplr)
library(dyplr)
install.packages("dyplr")
library(dplyr)
View(abalone)
filter(abalone, sex = F)
filter(abalone, sex = "F")
View(abalone)
filter(abalone, sex == "F")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library(dplyr)
data <- mtcars
data %>% group_by(am) %>% summarise(mean(mgp))
data %>% group_by(am) %>% summarise(mean(mpg))
data %>% arrange(desc(cyl), mpg)
update.packages(ask = FALSE, checkBuilt = TRUE)
setwd("C:/Users/Fajnor/Desktop/workout01")
library(ggplot2)
library(dplyr)
library(jpeg)
library(grid)
court_file <- "./images/half-court.JPG"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry, aes(x = x, y = y)) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
annotation_custom(court_image, -250, 250, -5, 420) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
curry_shot_chart
setwd("C:/Users/Fajnor/Desktop/workout01")
library(ggplot2)
library(dplyr)
library(jpeg)
library(grid)
# load data into enviornment
data <- read.csv("./data/shots-data.csv", stringsAsFactors = FALSE)
# Stephen Curry shot-chart
curry <- filter(data, name == "Stephen Curry")
ggplot(data = curry, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, color = shot_made_flag))
# court background image
court_file <- "./images/half-court.JPG"
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry, aes(x = x, y = y)) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
annotation_custom(court_image, -250, 250, -5, 420) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
court_file <- "./images/half-court.JPG"
court_file2 <- "./images/half-court2.JPG"
court_image <- rasterGrob(
readJPEG(court_file2),
width = unit(1, "npc"),
height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry, aes(x = x, y = y)) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
annotation_custom(court_image, -250, 250, -5, 420) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
curry <- filter(data, name == "Stephen Curry")
ggplot(data = curry, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, color = shot_made_flag))
curry <- filter(data, name == "Stephen Curry")
ggplot(data = curry, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, color = shot_made_flag))
rasterImage(court_image, lim$usr[1], lim$urs[3], lim$usr[4], lim$usr[4])
test.image <- readJPEG(court_file2)
curry <- filter(data, name == "Stephen Curry")
ggplot(data = curry, aes(x = x, y = y)) + geom_point(aes(x = x, y = y, color = shot_made_flag))
rasterImage(test.image, lim$usr[1], lim$urs[3], lim$usr[4], lim$usr[4])
court_file <- "./images/half-court.JPG"
court_file2 <- "./images/half-court2.JPG"
court_image <- rasterGrob(
readJPEG(court_file2),
width = unit(1, "npc"),
height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry, aes(x = x, y = y)) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
annotation_custom(court_image, -250, 250, -5, 420) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
curry_shot_chart <- ggplot(data = curry, aes(x = x, y = y)) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
annotation_custom(court_image, -250, 250, -5, 420) +
scale_fill_continuous(guide = FALSE) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
curry_shot_chart <- ggplot(data = curry, aes(x = x, y = y)) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
annotation_custom(court_image, -250, 250, -5, 420) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
curry_shot_chart
